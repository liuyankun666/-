#include <atmel\regx52.h>
#define int8 unsigned char
#define int16 unsigned int
#define int32 unsigned long

int8 code table1[][32]=
{
{0x10,0x04,0x60,0x04,0x02,0xFE,0x8C,0x01,0x80,0x20,0x18,0x40,0x08,0x30,0x08,0x0C,
0x88,0x03,0x7F,0x00,0x88,0x3F,0x08,0x40,0x28,0x40,0x18,0x40,0x08,0x70,0x00,0x00},/*沈*/

{0x00,0x00,0xFE,0xFF,0x02,0x08,0x22,0x10,0xDA,0x08,0x06,0x07,0x00,0x00,0xFC,0xFF,
0x04,0x41,0x04,0x41,0x04,0x41,0x04,0x41,0x04,0x41,0xFC,0xFF,0x00,0x00,0x00,0x00},/*阳*/

{0x80,0x80,0xFC,0x7F,0x96,0x02,0xE5,0x4C,0x84,0x80,0xFC,0x7F,0x00,0x80,0x08,0x60,
0xC8,0x1F,0x49,0x00,0x4A,0x00,0xC8,0x3F,0x08,0x40,0x08,0x40,0x00,0x78,0x00,0x00},/*航*/

{0x40,0x00,0x0C,0x40,0x44,0x40,0x24,0x41,0x14,0x41,0x04,0x41,0x05,0x41,0x06,0x7F,
0x04,0x41,0x04,0x41,0x14,0x41,0x24,0x41,0x44,0x40,0x14,0x40,0x0C,0x00,0x00,0x00},/*空*/

{0x80,0x80,0xFC,0x7F,0x96,0x02,0xE5,0x4C,0x84,0x80,0xFC,0x7F,0x00,0x80,0x08,0x60,
0xC8,0x1F,0x49,0x00,0x4A,0x00,0xC8,0x3F,0x08,0x40,0x08,0x40,0x00,0x78,0x00,0x00},/*航*/

{0x40,0x80,0x40,0x80,0x42,0x40,0x42,0x20,0x42,0x10,0x42,0x0C,0x42,0x03,0xFE,0x00,
0x42,0x03,0x42,0x0C,0x42,0x10,0x42,0x20,0x42,0x40,0x40,0x80,0x40,0x80,0x00,0x00},/*天*/

{0x40,0x80,0x40,0x80,0x40,0x40,0x40,0x20,0x40,0x10,0x40,0x0C,0x40,0x03,0xFF,0x00,
0x40,0x03,0x40,0x0C,0x40,0x10,0x40,0x20,0x40,0x40,0x40,0x80,0x40,0x80,0x00,0x00},/*大*/

{0x40,0x04,0x30,0x04,0x11,0x04,0x96,0x04,0x90,0x04,0x90,0x44,0x91,0x84,0x96,0x7E,
0x90,0x06,0x90,0x05,0x98,0x04,0x14,0x04,0x13,0x04,0x50,0x04,0x30,0x04,0x00,0x00},/*学*/

{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},/*0*/
};

int8 code table2[][32]=
{
{0xF0,0x00,0x08,0x01,0x04,0x02,0x04,0x04,0x04,0x08,0x08,0x10,0x10,0x20,0x20,0x40,
0x10,0x20,0x08,0x10,0x04,0x08,0x04,0x04,0x04,0x02,0x08,0x01,0xF0,0x00,0x00,0x00},/*心形*/

{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},/*0*/
};
void delay(void);
int8 flag;
int8 n;
int cnt=0;
int16 offset;
sbit KEY0=P1^0; /*p1.0引脚赋值给开关KEY0*//*完成移动*/
sbit KEY1=P1^1; /*p1.1引脚赋值给开关KEY1*//*完成闪烁*/
sbit KEY2=P1^2; /*p1.2引脚赋值给开关KEY2*//*完成静态显示*/
sbit KEY3=P1^3; /*p1.3引脚赋值给开关KEY3*//*完成切换*/
unsigned char menu=0;
unsigned char flag=0;
void main(void) /*主函数*/
{

	int8 i;
	int8 *p;
	flag=0x10;
	n=0;   /*完成T0的初始化*/
	TMOD=0x01;
	TH0=0xb1;
	TL0=0xe0;
	ET0=1;//允许定时器/计数器T0的中断溢出
	EA=1;//CPU开放所有中断源的中断请求
	TR0=1;
	p=&table2[0][0];/*table2地址给p*/
	cnt=sizeof(table2)-32;
	while(1)
	{
	   if(KEY0==0)/*移动*/
	   {
	      menu=0;
			  offset=0;
	   }
	    if(KEY1==0)/*闪烁*/
	   {
	      menu=1;
			  offset=0;
	   }
	   if(KEY2==0)/*静态*/
	   {
	      menu=2;
			  offset=0;
	   }
	    if(KEY3==0)/*切换*/
	   {
	      TR0=0;
	      offset=0;
	      if(flag)/*若flag=1则切换到table1中的字符*/
	      {
					flag=0;
	   	    p=&table1[0][0];
	        cnt=sizeof(table1)-32;
	      }
				else /*·否则切换至table2中的字符*/
	      {
					flag=1;
	      	p=&table2[0][0];
	        cnt=sizeof(table2)-32;
	      }
	      TR0=1;
	   }
	   if(menu==2)/*静态*/
	   {
for(i=0;i<8;i++) /*显示左半屏*/
			 {
			    P2=i|0x08;
				P0=*(p+offset+2*i);//P2.4=0，P2.3=1，选中U3，扫码给U6				delay();
			    P2=i|0x10;
		P0=*(p+offset+2*i+1);//P2.4=1，P2.3=0，选中U2，扫码给U7
delay();
		   }
		   for(i=8;i<16;i++)/*显示右半屏*/
			 {
			    P2=(i-8)|0x20;
			    P0=*(p+offset+2*i);//P2.5=1，P2.4=0，P2.3=0，选中U5，扫码给U8
delay();
			    P2=(i-8)|0x40;
	           P0=*(p+offset+2*i+1);//P2.6=1，P2.5=0，P2.4=0，选中U4，扫码给U9
delay();
		   }
		}
    if(menu==1)/*闪烁*/
	   {
for(i=0;i<8;i++) /*显示左半屏*/
			 {
			    P2=i|0x08;
				P0=*(p+offset+2*i);//P2.4=0，P2.3=1，选中U3，扫码给U6				delay();
			    P2=i|0x10;
		P0=*(p+offset+2*i+1);//P2.4=1，P2.3=0，选中U2，扫码给U7
delay();
		   }
		   for(i=8;i<16;i++)/*显示右半屏*/
			 {
			    P2=(i-8)|0x20;
			    P0=*(p+offset+2*i);//P2.5=1，P2.4=0，P2.3=0，选中U5，扫码给U8
delay();
			    P2=(i-8)|0x40;
	           P0=*(p+offset+2*i+1);//P2.6=1，P2.5=0，P2.4=0，选中U4，扫码给U9
delay();
		   }
		}
	   if(menu==0)/*左移*/
	   {
for(i=0;i<8;i++) /*显示左半屏*/
			 {
			    P2=i|0x08;
				P0=*(p+offset+2*i);//P2.4=0，P2.3=1，选中U3，扫码给U6				delay();
			    P2=i|0x10;
		P0=*(p+offset+2*i+1);//P2.4=1，P2.3=0，选中U2，扫码给U7
delay();
		   }
		   for(i=8;i<16;i++)/*显示右半屏*/
			 {
			    P2=(i-8)|0x20;
			    P0=*(p+offset+2*i);//P2.5=1，P2.4=0，P2.3=0，选中U5，扫码给U8
delay();
			    P2=(i-8)|0x40;
	           P0=*(p+offset+2*i+1);//P2.6=1，P2.5=0，P2.4=0，选中U4，扫码给U9
delay();
		   }
		}
	}
}
void delay(void)/*延迟*/
{
	int16 i;
	for(i=0;i<100;i++);
}
void timer0( ) /*中断*/
interrupt 1 using 3
{
	TF0=0;
	TH0=0xb1;
	TL0=0xe0;
	if(menu==0)//移动
	{
	    if(n<10)
	    {
		     n++;
	    }
	    else
	    {
		     offset+=2;//移动一个格
		     if(offset>cnt)
		        offset=0;
		     n=0;
	   }
	}
	else if(menu==1)//闪烁
	{
		  if(n<20)
	    {
		     n++;
	    }
	    else
	   {
		     offset+=32;//全屏闪烁
		     if(offset>cnt)
		         offset=0;
		     n=0;
	   }
	}
	else if(menu==2)//静止
	{
      if(n<10)
			{
				n++;
      }
			else
			{
         offset+=0;
				 if(offset>cnt)
		        offset=0;
		     n=0;
      }
  }
}
